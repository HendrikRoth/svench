<script>
  import { slide } from 'svelte/transition'
  import MenuViewsList from './MenuViewsList.svelte'

  export let items = []
  export let indent = 0

  const expanded = {}

  const toggle = item => {
    expanded[item.id] = !expanded[item.id]
  }

  const expandFolders = items =>
    items.forEach(({ id, isPage }) => {
      if (expanded[id] == null) {
        expanded[id] = !isPage
      }
    })

  $: expandFolders(items)
</script>

<ul class="pages" class:nested={indent > 0}>
  {#each items as it (it.id)}
    <li
      class:index={it.isIndex}
      class:directory={it.isDirectory}
      class:collapsed={!expanded[it.id]}
      class:page={!it.isDirectory}>
      {#if it.children}
        <span class="icon folder-collapse handle" on:click={toggle(it)}>⌄</span>
        <span class="icon handle" on:click={toggle(it)}>
          {#if it.isPage}⚙{:else}📁{/if}
        </span>
        {#if it.isIndex}
          <a class="text" href={it.shortPath}>{it.title || it.segment}</a>
        {:else if it.isPage}
          <a class="text" href={it.path}>{it.title || it.segment}</a>
        {:else}
          <span class="text">{it.title || it.segment}</span>
        {/if}
        {#if expanded[it.id]}
          <svelte:self items={it.children} indent={indent + 1} />
        {/if}
      {:else}
        {#if it.views}
          <span class="icon folder-collapse handle" on:click={toggle(it)}>
            ⌄
          </span>
        {/if}
        <span class="icon handle" on:click={toggle(it)}>⚙️</span>
        <a class="text" href={it.path}>{it.title || it.segment}</a>
      {/if}
      {#if it.views && expanded[it.id]}
        <ul class="nested" transition:slide>
          <MenuViewsList item={it} views={it.views} />
        </ul>
        <!-- <ul class="nested" transition:slide>
          {#each it.views as name}
            <li class="svench menu view">
              <span class="icon">🗈</span>
              <a class="text" href={it.path + `?view=${name}`}>{name}</a>
            </li>
          {/each}
        </ul> -->
      {/if}
    </li>
  {/each}
</ul>

<style>
  ul.nested {
    padding-left: 0;
  }
  ul {
    list-style: none;
    margin: 0;
    padding-left: 24px;
  }
  ul :global(li) {
    padding: 0;
    margin: 0.33em 0;
    position: relative;
  }
  li > .icon {
    color: #999;
    line-height: 0;
    position: absolute;
    width: 24px;
    top: 0.5em;
    margin-left: -24px;
    text-align: center;
    font-size: 16px;
  }
  .folder-collapse.handle {
    top: 0.4em;
    margin-left: -40px;
    cursor: pointer;
  }
  .collapsed > .folder-collapse.handle {
    top: 0.5em;
    transition: transform 120ms;
    transform-origin: center;
    transform: rotate(-90deg);
  }
  li.directory > .text {
    font-weight: 100;
  }
  li.page > .text {
    font-weight: 500;
  }
  ul :global(li.view > .text) {
    font-weight: normal;
    font-style: italic;
  }
  /* colors */
  li > .text:not(a) {
    color: #999;
    opacity: 0.75;
  }
  li > a.text {
    color: var(--primary, skyblue);
  }
  li > .icon {
    color: #999;
    opacity: 0.75;
  }
  ul :global(a) {
    display: inline-block;
    text-decoration: none;
  }
  ul :global(a:hover) {
    color: var(--primary-strong);
  }
  .handle {
    cursor: pointer;
  }
</style>
